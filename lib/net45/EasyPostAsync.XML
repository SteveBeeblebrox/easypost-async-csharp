<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EasyPostAsync</name>
    </assembly>
    <members>
        <member name="P:EasyPost.Credentials.Visibility">
            <summary>
            There are five possible values, which encode the security need and storage type for each attribute: "visible", "checkbox", "fake", "password", and "masked"
            </summary>
        </member>
        <member name="P:EasyPost.Credentials.Label">
            <summary>
            Most attributes have generic names, so for clarity a "label" value is provided for clearer representation when rendering forms
            </summary>
        </member>
        <member name="P:EasyPost.CarrierField.AutoLink">
            <summary>
            If this key is present with the value of true, no other attributes are needed for CarrierAccount creation
            </summary>
        </member>
        <member name="P:EasyPost.CarrierField.CustomWorkflow">
            <summary>
            If this key is present with the value of true, CarrierAccount creation of this type requires extra work not handled by 
            the CarrierAccount standard API
            </summary>
        </member>
        <member name="P:EasyPost.CarrierField.Credentials">
            <summary>
            If this object is present, required attribute names and their metadata are presented inside
            </summary>
        </member>
        <member name="P:EasyPost.CarrierField.TestCredentials">
            <summary>
            If this object is present, it contains attribute names and metadata just as the credentials object. It is not required for 
            CarrierAccount creation if you do not plan on using the carrier account for test mode
            </summary>
        </member>
        <member name="T:EasyPost.VerificationFlags">
            <summary>
            Define the address verification flags
            </summary>
        </member>
        <member name="T:EasyPost.Address">
            <summary>
            EasyPost Address objects are used to represent people, places, and organizations in a number of contexts.
            </summary>
        </member>
        <member name="P:EasyPost.Address.Street1">
            <summary>
            First line of the address
            </summary>
        </member>
        <member name="P:EasyPost.Address.Street2">
            <summary>
            Second line of the address
            </summary>
        </member>
        <member name="P:EasyPost.Address.City">
            <summary>
            City the address is located in
            </summary>
        </member>
        <member name="P:EasyPost.Address.State">
            <summary>
            State or province the address is located in
            </summary>
        </member>
        <member name="P:EasyPost.Address.Zip">
            <summary>
            ZIP or postal code the address is located in
            </summary>
        </member>
        <member name="P:EasyPost.Address.Country">
            <summary>
            Two letter ISO 3166 country code for the country the address is located in
            </summary>
        </member>
        <member name="P:EasyPost.Address.Residential">
            <summary>
            Whether or not this address would be considered residential
            </summary>
        </member>
        <member name="P:EasyPost.Address.CarrierFacility">
            <summary>
            The specific designation for the address (only relevant if the address is a carrier facility)
            </summary>
        </member>
        <member name="P:EasyPost.Address.Name">
            <summary>
            Name of the person. Both name and company can be included
            </summary>
        </member>
        <member name="P:EasyPost.Address.Company">
            <summary>
            Name of the organization. Both name and company can be included
            </summary>
        </member>
        <member name="P:EasyPost.Address.Phone">
            <summary>
            Phone number to reach the person or organization
            </summary>
        </member>
        <member name="P:EasyPost.Address.Email">
            <summary>
            Email to reach the person or organization
            </summary>
        </member>
        <member name="P:EasyPost.Address.FederalTaxId">
            <summary>
            Federal tax identifier of the person or organization
            </summary>
        </member>
        <member name="P:EasyPost.Address.StateTaxId">
            <summary>
            State tax identifier of the person or organization
            </summary>
        </member>
        <member name="P:EasyPost.Address.Verifications">
            <summary>
            The result of any verifications requested
            </summary>
        </member>
        <member name="T:EasyPost.EasyPostClient">
            <summary>
            Address API implementation
            </summary>
            <summary>
            Batch API implementation
            </summary>
            <summary>
            CarrierAccount API implementation
            </summary>
            <summary>
            CarrierAccount API implementation
            </summary>
            <summary>
            Event API implementation
            </summary>
            <summary>
            Report API implementation
            </summary>
            <summary>
            Order API implementation
            </summary>
            <summary>
            Item API implementation
            </summary>
            <summary>
            CustomersInfo API implementation
            </summary>
            <summary>
            CustomsItem API implementation
            </summary>
            <summary>
            Container API implementation
            </summary>
            <summary>
            Parcel API implementation
            </summary>
            <summary>
            Pickup API implementation
            </summary>
            <summary>
            ScanForm API implementation
            </summary>
            <summary>
            Shipment API implementation
            </summary>
            <summary>
            Tracker API implementation
            </summary>
            <summary>
            User API implementation
            </summary>
            <summary>
            Rate API implementation
            </summary>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetAddress(System.String)">
            <summary>
            Retrieve an Address from its id.
            </summary>
            <param name="id">String representing an Address. Starts with "adr_".</param>
            <returns>EasyPost.Address instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateAddress(EasyPost.Address,EasyPost.VerificationFlags)">
            <summary>
            Create an Address with optional verifications.
            </summary>
            <param name="address">Address to create</param>
            <param name="verify">Verification flags to to control verification. You can verify the delivery address or the 
            extended zip4 value. If you use the strict versions an HttpException to be raised if unsucessful. 
            </param>
            <returns>Address instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.VerifyAddress(EasyPost.Address,System.String)">
            <summary>
            Verify an address.
            </summary>
            <returns>Address instance. Check message for verification failures.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetBatch(System.String)">
            <summary>
            Retrieve a Batch from its id.
            </summary>
            <param name="id">String representing a Batch. Starts with "batch_".</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateBatch(System.Collections.Generic.IEnumerable{EasyPost.Shipment},System.String)">
            <summary>
            Create a Batch.
            </summary>
            <param name="shipments">Optional list of shipments</param>
            <param name="reference">Optional reference</param>
            <returns>EasyPost.Batch instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.AddShipmentsToBatch(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add shipments to the batch.
            </summary>
            <param name="id">Batch id to add the shipments to</param>
            <param name="shipmentIds">List of shipment ids to be added.</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.AddShipmentsToBatch(System.String,System.Collections.Generic.IEnumerable{EasyPost.Shipment})">
            <summary>
            Add shipments to the batch.
            </summary>
            <param name="id">Batch id to add the shipments to</param>
            <param name="shipments">List of Shipment objects to be added.</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.RemoveShipmentsFromBatch(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove shipments from the batch.
            </summary>
            <param name="id">Batch id to add the shipments to</param>
            <param name="shipmentIds">List of shipment ids to be removed.</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.RemoveShipmentsFromBatch(System.String,System.Collections.Generic.IEnumerable{EasyPost.Shipment})">
            <summary>
            Remove shipments from the batch.
            </summary>
            <param name="id">Batch id to add the shipments to</param>
            <param name="shipments">List of Shipment objects to be removed.</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.BuyLabelsForBatch(System.String)">
            <summary>
            Buy labels for all shipments within a batch. The Batch's state must be "created" before purchasing.
            </summary>
            <param name="id">Batch id to add the shipments to</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GenerateLabelForBatch(System.String,System.String,System.String)">
            <summary>
            Asynchronously generate a label containing all of the Shipment labels belonging to the batch.
            </summary>
            <param name="id">Batch id to generate the label for</param>
            <param name="fileFormat">Format to generate the label in. Valid formats: "pdf", "zpl" and "epl2".</param>
            <param name="orderBy">Optional parameter to order the generated label. Ex: "reference DESC"</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GenerateScanFormForBatch(System.String)">
            <summary>
            Asychronously generate a scan form for the batch.
            </summary>
            <param name="id">Batch id to generate the label for</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.ListCarrierAccounts">
            <summary>
            Get a list of carrier accounts
            </summary>
            <returns>List of carrier accounts</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetCarrierAccount(System.String)">
            <summary>
            Retrieve a CarrierAccount from its id.
            </summary>
            <param name="id">String representing a carrier account. Starts with "ca_".</param>
            <returns>CarrierAccount instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateCarrierAccount(EasyPost.CarrierAccount)">
            <summary>
            Create a CarrierAccount.
            </summary>
            <param name="carrierAccount">Carriern account details to create</param>
            <returns>CarrierAccount instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.UpdateCarrierAccount(EasyPost.CarrierAccount)">
            <summary>
            Update this CarrierAccount.
            </summary>
            <param name="carrierAccount">Carrier account details</param>
            <returns>CarrierAccount instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.DestroyCarrierAccount(System.String)">
            <summary>
            Remove this CarrierAccount from your account.
            </summary>
            <param name="id">Carrier account id</param>
        </member>
        <member name="M:EasyPost.EasyPostClient.ListCarrierTypes">
            <summary>
            Get a list of all carrier types
            </summary>
            <returns>List of carrier types</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetEvent(System.String)">
            <summary>
            Retrieve a Event from its id.
            </summary>
            <param name="id">String representing a Event. Starts with "evt_".</param>
            <returns>EasyPost.Event instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetReport(System.String,System.String)">
            <summary>
            Retrieve a Report from its id and type.
            </summary>
            <param name="type">Type of report, e.g. shipment, tracker, payment_log, etc.</param>
            <param name="id">String representing a report.</param>
            <returns>Report instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateReport(System.String,EasyPost.Report)">
            <summary>
            Create a Report.
            </summary>
            <param name="type">Type of the report</param>
            <param name="report">Report parameters. Valid fields:
            . StartDate
            . EndDate
            . IncludeChildren
            All invalid keys will be ignored. </param>
            <returns>Report instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.ListReports(System.String,EasyPost.ReportListOptions)">
            <summary>
            Get a paginated list of reports.
            </summary>
            <param name="type">Type of the report</param>
            <param name="options">Options for the pagination function</param>
            <returns>Instance of EasyPost.ScanForm</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetOrder(System.String)">
            <summary>
            Retrieve a Order from its id or reference.
            </summary>
            <param name="id">String representing a Order. Starts with "order_" if passing an id.</param>
            <returns>Order instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateOrder(EasyPost.Order)">
            <summary>
            Create a Order.
            </summary>
            <param name="order">Order details</param>
            <returns>Order instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.BuyOrder(System.String,System.String,System.String)">
            <summary>
            Purchase the shipments within this order with a carrier and service.
            </summary>
            <param name="id">Order id to buy</param>
            <param name="carrier">The carrier to purchase a shipment from.</param>
            <param name="service">The service to purchase.</param>
            <returns>Order instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.BuyOrder(System.String,EasyPost.CarrierRate)">
            <summary>
            Purchase a label for this shipment with the given rate.
            </summary>
            <param name="id">Order id to buy</param>
            <param name="rate">Rate object to puchase the shipment with.</param>
            <returns>Order instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetItem(System.String)">
            <summary>
            Retrieve an Item from its id or reference.
            </summary>
            <param name="id">String representing a Item. Starts with "item_" if passing an id.</param>
            <returns>Item instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateItem(EasyPost.Item)">
            <summary>
            Create an Item.
            </summary>
            <param name="item">Item to create</param>
            <returns>EasyPost.Item instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetItemByReference(System.String,System.String)">
            <summary>
            Retrieve a Item from a custom reference.
            </summary>
            <param name="name">String containing the name of the custom reference to search for.</param>
            <param name="value">String containing the value of the custom reference to search for.</param>
            <returns>Item instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetCustomsInfo(System.String)">
            <summary>
            Retrieve a CustomsInfo from its id.
            </summary>
            <param name="id">String representing a CustomsInfo. Starts with "cstinfo_".</param>
            <returns>CustomsInfo instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateCustomsInfo(EasyPost.CustomsInfo)">
            <summary>
            Create a CustomsInfo.
            </summary>
            <param name="customsInfo">Customs info to create</param>
            <returns>EasyPost.CustomsInfo instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetCustomsItem(System.String)">
            <summary>
            Retrieve a CustomsItem from its id.
            </summary>
            <param name="id">String representing a CustomsItem. Starts with "cstitem_".</param>
            <returns>CustomsItem instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateCustomsItem(EasyPost.CustomsItem)">
            <summary>
            Create a CustomsItem.
            </summary>
            <param name="customsItem">Customs item parameters</param>
            <returns>EasyPost.CustomsItem instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.#ctor(System.String)">
            <summary>
            Create a new EasyPost client
            </summary>
            <param name="apiKey">API key to use</param>
        </member>
        <member name="M:EasyPost.EasyPostClient.#ctor(System.String,System.Int32)">
            <summary>
            Create a new EasyPost client
            </summary>
            <param name="apiKey">API key to use</param>
            <param name="timeout">The timeout to use for client operations. 0 for the default.</param>
        </member>
        <member name="P:EasyPost.EasyPostClient.ExecuteNonAsync">
            <summary>
            True if the requests should be executed using non-async code for backwards compatibility
            </summary>
        </member>
        <member name="M:EasyPost.EasyPostClient.#ctor(EasyPost.ClientConfiguration)">
            <summary>
            Create a new EasyPost client
            </summary>
            <param name="clientConfiguration">Client configuration to use</param>
        </member>
        <member name="M:EasyPost.EasyPostClient.Execute(EasyPost.EasyPostRequest)">
            <summary>
            Internal function to execute a request
            </summary>
            <param name="request">EasyPost request to execute</param>
        </member>
        <member name="M:EasyPost.EasyPostClient.Execute``1(EasyPost.EasyPostRequest)">
            <summary>
            Internal function to execute a typed request
            </summary>
            <typeparam name="TResponse">Type of the JSON response we are expecting</typeparam>
            <param name="request">EasyPost request to execute</param>
            <returns>Response for the request</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.PrepareRequest(EasyPost.EasyPostRequest)">
            <summary>
            Internal function to prepate the request to be executed
            </summary>
            <param name="request">EasyPost request to be executed</param>
            <returns>RestSharp request to execute</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetContainer(System.String)">
            <summary>
            Retrieve a Container from its id or reference.
            </summary>
            <param name="id">String representing a Container. Starts with "container_" if passing an id.</param>
            <returns>Container instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateContainer(EasyPost.Container)">
            <summary>
            Create a Container.
            </summary>
            <param name="container">Container parameters</param>
            <returns>EasyPost.Container instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetParcel(System.String)">
            <summary>
            Retrieve a Parcel from its id.
            </summary>
            <param name="id">String representing a Parcel. Starts with "prcl_".</param>
            <returns>Parcel instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateParcel(EasyPost.Parcel)">
            <summary>
            Create a Parcel.
            </summary>
            <param name="parcel">Parcel to create</param>
            <returns>Parcel instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetPickup(System.String)">
            <summary>
            Retrieve a Pickup from its id.
            </summary>
            <param name="id">String representing a Pickup. Starts with "pickup_".</param>
            <returns>Pickup instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreatePickup(EasyPost.Pickup)">
            <summary>
            Create a Pickup.
            </summary>
            <param name="pickup">Pickup to create</param>
            <returns>Pickup instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.BuyPickup(System.String,System.String,System.String)">
            <summary>
            Purchase this pickup.
            </summary>
            <param name="id">Pickup id to purchase</param>
            <param name="carrier">The name of the carrier to purchase with.</param>
            <param name="service">The name of the service to purchase.</param>
            <returns>Pickup instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CancelPickp(System.String)">
            <summary>
            Cancel this pickup.
            </summary>
            <param name="id">Pickup id to cancel</param>
            <returns>Pickup instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.ListScanForms(EasyPost.ScanFormListOptions)">
            <summary>
            Get a paginated list of scan forms.
            </summary>
            <param name="options">Options for the pagination function</param>
            <returns>Instance of ScanFormList</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.ListShipments(EasyPost.ShipmentListOptions)">
            <summary>
            Get a paginated list of shipments.
            </summary>
            <param name="options">Options for the pagination function</param>
            <returns>Instance of EasyPost.ShipmentList</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetShipment(System.String)">
            <summary>
            Retrieve a Shipment from its id.
            </summary>
            <param name="id">String representing a Shipment. Starts with "shp_".</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateShipment(EasyPost.Shipment)">
            <summary>
            Create a Shipment.
            </summary>
            <param name="shipment">Shipment details</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.RegenerateRates(EasyPost.Shipment)">
            <summary>
            Re-populate the rates property for this shipment
            </summary>
            <param name="shipment">The shipment to regenerate rates for</param>
        </member>
        <member name="M:EasyPost.EasyPostClient.BuyShipment(System.String,System.String)">
            <summary>
            Buy a label for this shipment with the given rate.
            </summary>
            <param name="id">The id of the shipment to buy the label for</param>
            <param name="rateId">The id of the rate to purchase the shipment with.</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.BuyInsuranceForShipment(System.String,System.Double)">
            <summary>
            Buy insurance for a shipment for the given amount.
            </summary>
            <param name="id">The id of the shipment to buy insurance for</param>
            <param name="amount">The amount to insure the shipment for. Currency is provided when creating a shipment.</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GenerateLabel(System.String,System.String)">
            <summary>
            Generate a postage label for this shipment.
            </summary>
            <param name="id">The id of the shipment to generate the label for</param>
            <param name="fileFormat">Format to generate the label in. Valid formats: "pdf", "zpl" and "epl2".</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GenerateStamp(System.String)">
            <summary>
            Generate a stamp for this shipment.
            </summary>
            <param name="id">The id of the shipment to generate the stamp for</param>
            <returns>URL for the stamp</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GenerateBarcode(System.String)">
            <summary>
            Generate a barcode for this shipment.
            </summary>
            <param name="id">The id of the shipment to generate the stamp for</param>
            <returns>URL for the barcode</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.RefundShipment(System.String)">
            <summary>
            Send a refund request to the carrier the shipment was purchased from.
            </summary>
            <param name="id">The id of the shipment to refund</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateTracker(System.String,System.String)">
            <summary>
            Creates a tracker for a carrier and tracking code
            </summary>
            <param name="carrier">Carrier</param>
            <param name="trackingCode">Tracking code</param>
            <returns>Tracker instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetTracker(System.String)">
            <summary>
            Retrieve a Tracker from its id.
            </summary>
            <param name="id">String representing a Tracker. Starts with "trk_".</param>
            <returns>Tracker instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.ListTrackers(EasyPost.TrackerListOptions)">
            <summary>
            Get a paginated list of trackers.
            </summary>
            <param name="options">Options for the pagination function</param>
            <returns>Instance of EasyPost.ShipmentList</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetUser(System.String)">
            <summary>
            Retrieve a User from its id. If no id is specified, it returns the user for the api_key specified.
            </summary>
            <param name="id">String representing a user. Starts with "user_".</param>
            <returns>User instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.CreateUser(System.String)">
            <summary>
            Create a child user for the account associated with the api_key specified.
            </summary>
            <param name="userName">Name of the user</param>
            <returns>EasyPost.User instance.</returns>
        </member>
        <member name="M:EasyPost.EasyPostClient.UpdateUser(EasyPost.User)">
            <summary>
            Update the User associated with the api_key specified.
            </summary>
            <param name="user">User parameters to update</param>
        </member>
        <member name="M:EasyPost.EasyPostClient.DestroyUser(System.String)">
            <summary>
            Destroys a user
            </summary>
            <param name="id">ID of the user</param>
        </member>
        <member name="M:EasyPost.EasyPostClient.GetRate(System.String)">
            <summary>
            Retrieve a Rate from its id.
            </summary>
            <param name="id">String representing a Rate. Starts with "rate_".</param>
            <returns>CarrierRate instance.</returns>
        </member>
        <member name="P:EasyPost.ApiKey.Key">
            <summary>
            The actual key value to use for authentication
            </summary>
        </member>
        <member name="P:EasyPost.ApiKey.Mode">
            <summary>
            Set based on which api-key you used, either "test" or "production".
            </summary>
        </member>
        <member name="P:EasyPost.ApiKey.CreatedAt">
            <summary>
            Date the key was created
            </summary>
        </member>
        <member name="T:EasyPost.Batch">
            <summary>
            EasyPost Batch object
            </summary>
        </member>
        <member name="P:EasyPost.Batch.State">
            <summary>
            The overall state. Possible values are "creating", "creation_failed", "created", "purchasing", "purchase_failed", "purchased", "label_generating", and "label_generated"
            </summary>
        </member>
        <member name="P:EasyPost.Batch.NumShipments">
            <summary>
            The number of shipments added
            </summary>
        </member>
        <member name="P:EasyPost.Batch.Shipments">
            <summary>
            List of batch shipments
            </summary>
        </member>
        <member name="P:EasyPost.Batch.Status">
            <summary>
            A map of BatchShipment statuses to the count of BatchShipments with that status. Valid statuses are "postage_purchased", "postage_purchase_failed", "queued_for_purchase", and "creation_failed"
            </summary>
        </member>
        <member name="P:EasyPost.Batch.LabelUrl">
            <summary>
            The label image url
            </summary>
        </member>
        <member name="P:EasyPost.Batch.ScanForm">
            <summary>
            The created ScanForm
            </summary>
        </member>
        <member name="P:EasyPost.Batch.Pickup">
            <summary>
            The created Pickup
            </summary>
        </member>
        <member name="P:EasyPost.BatchShipment.Id">
            <summary>
            The id of the Shipment.
            </summary>
        </member>
        <member name="P:EasyPost.BatchShipment.BatchStatus">
            <summary>
            The current status. Possible values are "postage_purchased", "postage_purchase_failed", "queued_for_purchase", and "creation_failed"
            </summary>
        </member>
        <member name="P:EasyPost.BatchShipment.BatchMessage">
            <summary>
            A human readable message for any errors that occurred during the Batch's life cycle
            </summary>
        </member>
        <member name="P:EasyPost.CarrierAccount.Type">
            <summary>
            The name of the carrier type. Note that "EndiciaAccount" is the current USPS integration account type
            </summary>
        </member>
        <member name="P:EasyPost.CarrierAccount.Description">
            <summary>
            An optional, user-readable field to help distinguish accounts
            </summary>
        </member>
        <member name="P:EasyPost.CarrierAccount.Readable">
            <summary>
            The name used when displaying a readable value for the type of the account
            </summary>
        </member>
        <member name="P:EasyPost.CarrierAccount.Credentials">
            <summary>
            Unlike the "credentials" object contained in "fields", this nullable object contains just raw credential pairs for client library consumption
            </summary>
        </member>
        <member name="P:EasyPost.CarrierAccount.TestCredentials">
            <summary>
            Unlike the "test_credentials" object contained in "fields", this nullable object contains just raw test_credential pairs for client library consumption
            </summary>
        </member>
        <member name="P:EasyPost.CarrierDetail.GuaranteedDeliveryDate">
            <summary>
            The guaranteed delivery date
            </summary>
        </member>
        <member name="P:EasyPost.CarrierDetail.OriginLocation">
            <summary>
            Origina location
            </summary>
        </member>
        <member name="P:EasyPost.CarrierDetail.DestinationLocation">
            <summary>
            Destination location
            </summary>
        </member>
        <member name="P:EasyPost.CarrierDetail.Service">
            <summary>
            The service level the associated shipment was shipped with (if available)
            </summary>
        </member>
        <member name="P:EasyPost.CarrierDetail.ContainerType">
            <summary>
            The type of container the associated shipment was shipped in (if available)
            </summary>
        </member>
        <member name="P:EasyPost.CarrierDetail.EstDeliveryDateLocal">
            <summary>
            The estimated delivery date as provided by the carrier, in the local time zone (if available)
            </summary>
        </member>
        <member name="P:EasyPost.CarrierDetail.EstDeliveryTimeLocal">
            <summary>
            The estimated delivery time as provided by the carrier, in the local time zone (if available)
            </summary>
        </member>
        <member name="P:EasyPost.CarrierType.Type">
            <summary>
            Specifies the CarrierAccount type. Note that "EndiciaAccount" is the current USPS integration account type
            </summary>
        </member>
        <member name="P:EasyPost.CarrierType.Readable">
            <summary>
            Readable name for the carrier type
            </summary>
        </member>
        <member name="P:EasyPost.CarrierType.Logo">
            <summary>
            Logo for the carrier type
            </summary>
        </member>
        <member name="P:EasyPost.CarrierType.Fields">
            <summary>
            Contains at least one of the following keys: "auto_link", "credentials", "test_credentials", and "custom_workflow"
            </summary>
        </member>
        <member name="T:EasyPost.RequestError">
            <summary>
            Class to represent a request error. 
            </summary>
        </member>
        <member name="P:EasyPost.RequestError.StatusCode">
            <summary>
            Http status code for the request
            </summary>
        </member>
        <member name="P:EasyPost.RequestError.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:EasyPost.RequestError.Message">
            <summary>
            Human readable description of the problem
            </summary>
        </member>
        <member name="P:EasyPost.RequestError.Errors">
            <summary>
            Optional list of detailed error information
            </summary>
        </member>
        <member name="P:EasyPost.RequestError.Content">
            <summary>
            Raw response content
            </summary>
        </member>
        <member name="P:EasyPost.IEasyPostClient.ExecuteNonAsync">
            <summary>
            True if the requests should be executed using non-async code for backwards compatibility
            </summary>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetAddress(System.String)">
            <summary>
            Retrieve an Address from its id.
            </summary>
            <param name="id">String representing an Address. Starts with "adr_".</param>
            <returns>EasyPost.Address instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateAddress(EasyPost.Address,EasyPost.VerificationFlags)">
            <summary>
            Create an Address with optional verifications.
            </summary>
            <param name="address">Address to create</param>
            <param name="verify">Verification flags to to control verification. You can verify the delivery address or the 
            extended zip4 value. If you use the strict versions an HttpException to be raised if unsucessful. 
            </param>
            <returns>Address instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.VerifyAddress(EasyPost.Address,System.String)">
            <summary>
            Verify an address.
            </summary>
            <returns>EasyPost.Address instance. Check message for verification failures.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetBatch(System.String)">
            <summary>
            Retrieve a Batch from its id.
            </summary>
            <param name="id">String representing a Batch. Starts with "batch_".</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateBatch(System.Collections.Generic.IEnumerable{EasyPost.Shipment},System.String)">
            <summary>
            Create a Batch.
            </summary>
            <param name="shipments">Optional list of shipments</param>
            <param name="reference">Optional reference</param>
            <returns>EasyPost.Batch instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.AddShipmentsToBatch(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Add shipments to the batch.
            </summary>
            <param name="id">Batch id to add the shipments to</param>
            <param name="shipmentIds">List of shipment ids to be added.</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.AddShipmentsToBatch(System.String,System.Collections.Generic.IEnumerable{EasyPost.Shipment})">
            <summary>
            Add shipments to the batch.
            </summary>
            <param name="id">Batch id to add the shipments to</param>
            <param name="shipments">List of Shipment objects to be added.</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.RemoveShipmentsFromBatch(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Remove shipments from the batch.
            </summary>
            <param name="id">Batch id to add the shipments to</param>
            <param name="shipmentIds">List of shipment ids to be removed.</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.RemoveShipmentsFromBatch(System.String,System.Collections.Generic.IEnumerable{EasyPost.Shipment})">
            <summary>
            Remove shipments from the batch.
            </summary>
            <param name="id">Batch id to add the shipments to</param>
            <param name="shipments">List of Shipment objects to be removed.</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.BuyLabelsForBatch(System.String)">
            <summary>
            Buy labels for all shipments within a batch. The Batch's state must be "created" before purchasing.
            </summary>
            <param name="id">Batch id to add the shipments to</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GenerateLabelForBatch(System.String,System.String,System.String)">
            <summary>
            Asynchronously generate a label containing all of the Shipment labels belonging to the batch.
            </summary>
            <param name="id">Batch id to generate the label for</param>
            <param name="fileFormat">Format to generate the label in. Valid formats: "pdf", "zpl" and "epl2".</param>
            <param name="orderBy">Optional parameter to order the generated label. Ex: "reference DESC"</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GenerateScanFormForBatch(System.String)">
            <summary>
            Asychronously generate a scan form for the batch.
            </summary>
            <param name="id">Batch id to generate the label for</param>
            <returns>Batch instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.ListCarrierAccounts">
            <summary>
            Get a list of carrier accounts
            </summary>
            <returns>List of carrier accounts</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetCarrierAccount(System.String)">
            <summary>
            Retrieve a CarrierAccount from its id.
            </summary>
            <param name="id">String representing a carrier account. Starts with "ca_".</param>
            <returns>CarrierAccount instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateCarrierAccount(EasyPost.CarrierAccount)">
            <summary>
            Create a CarrierAccount.
            </summary>
            <param name="carrierAccount">Carriern account details to create</param>
            <returns>CarrierAccount instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.UpdateCarrierAccount(EasyPost.CarrierAccount)">
            <summary>
            Update this CarrierAccount.
            </summary>
            <param name="carrierAccount">Carrier account details</param>
            <returns>CarrierAccount instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.DestroyCarrierAccount(System.String)">
            <summary>
            Remove this CarrierAccount from your account.
            </summary>
            <param name="id">Carrier account id</param>
        </member>
        <member name="M:EasyPost.IEasyPostClient.ListCarrierTypes">
            <summary>
            Get a list of all carrier types
            </summary>
            <returns>List of carrier types</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetContainer(System.String)">
            <summary>
            Retrieve a Container from its id or reference.
            </summary>
            <param name="id">String representing a Container. Starts with "container_" if passing an id.</param>
            <returns>Container instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateContainer(EasyPost.Container)">
            <summary>
            Create a Container.
            </summary>
            <param name="container">Container parameters</param>
            <returns>EasyPost.Container instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetCustomsInfo(System.String)">
            <summary>
            Retrieve a CustomsInfo from its id.
            </summary>
            <param name="id">String representing a CustomsInfo. Starts with "cstinfo_".</param>
            <returns>CustomsInfo instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateCustomsInfo(EasyPost.CustomsInfo)">
            <summary>
            Create a CustomsInfo.
            </summary>
            <param name="customsInfo">Customs info to create</param>
            <returns>EasyPost.CustomsInfo instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetCustomsItem(System.String)">
            <summary>
            Retrieve a CustomsItem from its id.
            </summary>
            <param name="id">String representing a CustomsItem. Starts with "cstitem_".</param>
            <returns>CustomsItem instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateCustomsItem(EasyPost.CustomsItem)">
            <summary>
            Create a CustomsItem.
            </summary>
            <param name="customsItem">Customs item parameters</param>
            <returns>EasyPost.CustomsItem instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetEvent(System.String)">
            <summary>
            Retrieve a Event from its id.
            </summary>
            <param name="id">String representing a Event. Starts with "evt_".</param>
            <returns>EasyPost.Event instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetItem(System.String)">
            <summary>
            Retrieve an Item from its id or reference.
            </summary>
            <param name="id">String representing a Item. Starts with "item_" if passing an id.</param>
            <returns>Item instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateItem(EasyPost.Item)">
            <summary>
            Create an Item.
            </summary>
            <param name="item">Item to create</param>
            <returns>EasyPost.Item instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetItemByReference(System.String,System.String)">
            <summary>
            Retrieve a Item from a custom reference.
            </summary>
            <param name="name">String containing the name of the custom reference to search for.</param>
            <param name="value">String containing the value of the custom reference to search for.</param>
            <returns>Item instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetOrder(System.String)">
            <summary>
            Retrieve a Order from its id or reference.
            </summary>
            <param name="id">String representing a Order. Starts with "order_" if passing an id.</param>
            <returns>Order instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateOrder(EasyPost.Order)">
            <summary>
            Create a Order.
            </summary>
            <param name="order">Order details</param>
            <returns>Order instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.BuyOrder(System.String,System.String,System.String)">
            <summary>
            Purchase the shipments within this order with a carrier and service.
            </summary>
            <param name="id">Order id to buy</param>
            <param name="carrier">The carrier to purchase a shipment from.</param>
            <param name="service">The service to purchase.</param>
            <returns>Order instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.BuyOrder(System.String,EasyPost.CarrierRate)">
            <summary>
            Purchase a label for this shipment with the given rate.
            </summary>
            <param name="id">Order id to buy</param>
            <param name="rate">Rate object to puchase the shipment with.</param>
            <returns>Order instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetParcel(System.String)">
            <summary>
            Retrieve a Parcel from its id.
            </summary>
            <param name="id">String representing a Parcel. Starts with "prcl_".</param>
            <returns>Parcel instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateParcel(EasyPost.Parcel)">
            <summary>
            Create a Parcel.
            </summary>
            <param name="parcel">Parcel to create</param>
            <returns>Parcel instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetPickup(System.String)">
            <summary>
            Retrieve a Pickup from its id.
            </summary>
            <param name="id">String representing a Pickup. Starts with "pickup_".</param>
            <returns>Pickup instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreatePickup(EasyPost.Pickup)">
            <summary>
            Create a Pickup.
            </summary>
            <param name="pickup">Pickup to create</param>
            <returns>Pickup instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.BuyPickup(System.String,System.String,System.String)">
            <summary>
            Purchase this pickup.
            </summary>
            <param name="id">Pickup id to purchase</param>
            <param name="carrier">The name of the carrier to purchase with.</param>
            <param name="service">The name of the service to purchase.</param>
            <returns>Pickup instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CancelPickp(System.String)">
            <summary>
            Cancel this pickup.
            </summary>
            <param name="id">Pickup id to cancel</param>
            <returns>Pickup instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetReport(System.String,System.String)">
            <summary>
            Retrieve a Report from its id and type.
            </summary>
            <param name="type">Type of report, e.g. shipment, tracker, payment_log, etc.</param>
            <param name="id">String representing a report.</param>
            <returns>Report instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateReport(System.String,EasyPost.Report)">
            <summary>
            Create a Report.
            </summary>
            <param name="type">Type of the report</param>
            <param name="report">Report parameters. Valid fields:
            . StartDate
            . EndDate
            . IncludeChildren
            All invalid keys will be ignored. </param>
            <returns>Report instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.ListReports(System.String,EasyPost.ReportListOptions)">
            <summary>
            Get a paginated list of reports.
            </summary>
            <param name="type">Type of the report</param>
            <param name="options">Options for the pagination function</param>
            <returns>Instance of EasyPost.ScanForm</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.ListScanForms(EasyPost.ScanFormListOptions)">
            <summary>
            Get a paginated list of scan forms.
            </summary>
            <param name="options">Options for the pagination function</param>
            <returns>Instance of ScanFormList</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.ListShipments(EasyPost.ShipmentListOptions)">
            <summary>
            Get a paginated list of shipments.
            </summary>
            <param name="options">Options for the pagination function</param>
            <returns>Instance of EasyPost.ShipmentList</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetShipment(System.String)">
            <summary>
            Retrieve a Shipment from its id.
            </summary>
            <param name="id">String representing a Shipment. Starts with "shp_".</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateShipment(EasyPost.Shipment)">
            <summary>
            Create a Shipment.
            </summary>
            <param name="shipment">Shipment details</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.RegenerateRates(EasyPost.Shipment)">
            <summary>
            Re-populate the rates property for this shipment
            </summary>
            <param name="shipment">The shipment to regenerate rates for</param>
        </member>
        <member name="M:EasyPost.IEasyPostClient.BuyShipment(System.String,System.String)">
            <summary>
            Buy a label for this shipment with the given rate.
            </summary>
            <param name="id">The id of the shipment to buy the label for</param>
            <param name="rateId">The id of the rate to purchase the shipment with.</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.BuyInsuranceForShipment(System.String,System.Double)">
            <summary>
            Buy insurance for a shipment for the given amount.
            </summary>
            <param name="id">The id of the shipment to buy insurance for</param>
            <param name="amount">The amount to insure the shipment for. Currency is provided when creating a shipment.</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GenerateLabel(System.String,System.String)">
            <summary>
            Generate a postage label for this shipment.
            </summary>
            <param name="id">The id of the shipment to generate the label for</param>
            <param name="fileFormat">Format to generate the label in. Valid formats: "pdf", "zpl" and "epl2".</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GenerateStamp(System.String)">
            <summary>
            Generate a stamp for this shipment.
            </summary>
            <param name="id">The id of the shipment to generate the stamp for</param>
            <returns>URL for the stamp</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GenerateBarcode(System.String)">
            <summary>
            Generate a barcode for this shipment.
            </summary>
            <param name="id">The id of the shipment to generate the stamp for</param>
            <returns>URL for the barcode</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.RefundShipment(System.String)">
            <summary>
            Send a refund request to the carrier the shipment was purchased from.
            </summary>
            <param name="id">The id of the shipment to refund</param>
            <returns>Shipment instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateTracker(System.String,System.String)">
            <summary>
            Creates a tracker for a carrier and tracking code
            </summary>
            <param name="carrier">Carrier</param>
            <param name="trackingCode">Tracking code</param>
            <returns>Tracker instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetTracker(System.String)">
            <summary>
            Retrieve a Tracker from its id.
            </summary>
            <param name="id">String representing a Tracker. Starts with "trk_".</param>
            <returns>Tracker instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.ListTrackers(EasyPost.TrackerListOptions)">
            <summary>
            Get a paginated list of trackers.
            </summary>
            <param name="options">Options for the pagination function</param>
            <returns>Instance of EasyPost.ShipmentList</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.GetUser(System.String)">
            <summary>
            Retrieve a User from its id. If no id is specified, it returns the user for the api_key specified.
            </summary>
            <param name="id">String representing a user. Starts with "user_".</param>
            <returns>User instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.CreateUser(System.String)">
            <summary>
            Create a child user for the account associated with the api_key specified.
            </summary>
            <param name="userName">Name of the user</param>
            <returns>EasyPost.User instance.</returns>
        </member>
        <member name="M:EasyPost.IEasyPostClient.UpdateUser(EasyPost.User)">
            <summary>
            Update the User associated with the api_key specified.
            </summary>
            <param name="user">User parameters to update</param>
        </member>
        <member name="M:EasyPost.IEasyPostClient.DestroyUser(System.String)">
            <summary>
            Destroys a user
            </summary>
            <param name="id">ID of the user</param>
        </member>
        <member name="P:EasyPost.Error.Code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:EasyPost.Error.Field">
            <summary>
            Field of the request that the error describes
            </summary>
        </member>
        <member name="P:EasyPost.Error.Message">
            <summary>
            Human readable description of the problem
            </summary>
        </member>
        <member name="P:EasyPost.Error.Suggestion">
            <summary>
            Optional suggestion
            </summary>
        </member>
        <member name="P:EasyPost.Event.Description">
            <summary>
            Result type and event name, see the "Possible Event Types" section for more information
            </summary>
        </member>
        <member name="P:EasyPost.Event.PreviousAttributes">
            <summary>
            Previous values of relevant result attributes
            </summary>
        </member>
        <member name="P:EasyPost.Event.Result">
            <summary>
            The object associated with the Event. See the "object" attribute on the result to determine its specific type
            </summary>
        </member>
        <member name="P:EasyPost.Event.Status">
            <summary>
            The current status of the event. Possible values are "completed", "failed", "in_queue", "retrying", or "pending" (deprecated)
            </summary>
        </member>
        <member name="P:EasyPost.Event.PendingUrls">
            <summary>
            Webhook URLs that have not yet been successfully notified as of the time this webhook event was sent. The URL 
            receiving the Event will still be listed in pending_urls, as will any other URLs that receive the Event at the same time
            </summary>
        </member>
        <member name="P:EasyPost.Event.CompletedUrls">
            <summary>
            Webhook URLs that have already been successfully notified as of the time this webhook was sent
            </summary>
        </member>
        <member name="P:EasyPost.EasyPostMessage.Carrier">
            <summary>
            The name of the carrier generating the error, e.g. "UPS"
            </summary>
        </member>
        <member name="P:EasyPost.EasyPostMessage.Type">
            <summary>
            The category of error that occurred. Most frequently "rate_error"
            </summary>
        </member>
        <member name="P:EasyPost.EasyPostMessage.Message">
            <summary>
            The category of error that occurred. Most frequently "rate_error"
            </summary>
        </member>
        <member name="P:EasyPost.Options.AdditionalHandling">
            <summary>
            Setting this option to true, will add an additional handling charge. An Additional Handling charge may be applied to the following:
            . Any article that is encased in an outside shipping container made of metal or wood.
            . Any item, such as a barrel, drum, pail or tire, that is not fully encased in a corrugated cardboard shipping container.
            . Any package with the longest side exceeding 60 inches or its second longest side exceeding 30 inches.
            . Any package with an actual weight greater than 70 pounds.
            </summary>
        </member>
        <member name="P:EasyPost.Options.AddressValidationLevel">
            <summary>
            Setting this option to "0", will allow the minimum amount of address information to pass the validation check. Only for USPS postage.
            </summary>
        </member>
        <member name="P:EasyPost.Options.Alcohol">
            <summary>
            Set this option to true if your shipment contains alcohol.
            . UPS - only supported for US Domestic shipments
            . FedEx - only supported for US Domestic shipments
            . Canada Post - Requires adult signature 19 years or older.If you want adult signature 18 years or older, instead use delivery_confirmation: ADULT_SIGNATURE
            </summary>
        </member>
        <member name="P:EasyPost.Options.BillReceiverAccount">
            <summary>
            Setting an account number of the receiver who is to receive and buy the postage.
            . UPS - bill_receiver_postal_code is also required
            </summary>
        </member>
        <member name="P:EasyPost.Options.BillReceiverPostalCode">
            <summary>
            Setting a postal code of the receiver account you want to buy postage.
            . UPS - bill_receiver_account also required
            </summary>
        </member>
        <member name="P:EasyPost.Options.BillThirdPartyAccount">
            <summary>
            Setting an account number of the third party account you want to buy postage.
            . UPS - bill_third_party_country and bill_third_party_postal_code also required
            </summary>
        </member>
        <member name="P:EasyPost.Options.BillThirdPartyCountry">
            <summary>
            etting a country of the third party account you want to buy postage.
            . UPS - bill_third_party_account and bill_third_party_postal_code also required
            </summary>
        </member>
        <member name="P:EasyPost.Options.BillThirdPartyPostalCode">
            <summary>
            Setting a postal code of the third party account you want to buy postage.
            . UPS - bill_third_party_country and bill_third_party_account also required
            </summary>
        </member>
        <member name="P:EasyPost.Options.ByDrone">
            <summary>
            Setting this option to true will indicate to the carrier to prefer delivery by drone, if the carrier supports drone delivery.
            </summary>
        </member>
        <member name="P:EasyPost.Options.CarbonNeutral">
            <summary>
            Setting this to true will add a charge to reduce carbon emissions.
            </summary>
        </member>
        <member name="P:EasyPost.Options.CodAmount">
            <summary>
            Adding an amount will have the carrier collect the specified amount from the recipient.
            </summary>
        </member>
        <member name="P:EasyPost.Options.CodMethod">
            <summary>
            Method for payment. "CASH", "CHECK", "MONEY_ORDER"
            </summary>
        </member>
        <member name="P:EasyPost.Options.CodAddressId">
            <summary>
            COD address Id
            </summary>
        </member>
        <member name="P:EasyPost.Options.Currency">
            <summary>
            Which currency this shipment will show for rates if carrier allows.
            </summary>
        </member>
        <member name="P:EasyPost.Options.Incoterm">
            <summary>
            Incoterm negotiated for shipment. Supported values are 
            "EXW", "FCA", "CPT", "CIP", "DAT", "DAP", "DDP", "FAS", "FOB", "CFR", and "CIF". 
            Setting this value to anything other than "DDP" will pass the cost and responsibility of 
            duties on to the recipient of the package(s), as specified by Incoterms rules.
            </summary>
        </member>
        <member name="P:EasyPost.Options.DeliveryConfirmation">
            <summary>
            If you want to request a signature, you can pass "ADULT_SIGNATURE" or "SIGNATURE". You may also request "NO_SIGNATURE" to leave the package at the door.
            . All - some options may be limited for international shipments
            </summary>
        </member>
        <member name="P:EasyPost.Options.DryIce">
            <summary>
            Package contents contain dry ice.
            . UPS - Need dry_ice_weight to be set
            . UPS MailInnovations - Need dry_ice_weight to be set
            . FedEx - Need dry_ice_weight to be set
            </summary>
        </member>
        <member name="P:EasyPost.Options.DryIceMedical">
            <summary>
            If the dry ice is for medical use, set this option to true.
            . UPS - Need dry_ice_weight to be set
            . UPS MailInnovations - Need dry_ice_weight to be set
            </summary>
        </member>
        <member name="P:EasyPost.Options.DryIceWeight">
            <summary>
            Weight of the dry ice in ounces.
            . UPS - Need dry_ice to be set
            . UPS MailInnovations - Need dry_ice to be set
            . FedEx - Need dry_ice to be set
            </summary>
        </member>
        <member name="P:EasyPost.Options.Endorsement">
            <summary>
            Possible values "ADDRESS_SERVICE_REQUESTED", "FORWARDING_SERVICE_REQUESTED", "CHANGE_SERVICE_REQUESTED", "RETURN_SERVICE_REQUESTED", "LEAVE_IF_NO_RESPONSE"
            </summary>
        </member>
        <member name="P:EasyPost.Options.FreightCharge">
            <summary>
            Additional cost to be added to the invoice of this shipment. Only applies to UPS currently.
            </summary>
        </member>
        <member name="P:EasyPost.Options.HandlingInstructions">
            <summary>
            This is to designate special instructions for the carrier like "Do not drop!".
            </summary>
        </member>
        <member name="P:EasyPost.Options.Hazmat">
            <summary>
            Dangerous goods indicator. Possible values are "ORMD" and "LIMITED_QUANTITY". Applies to USPS, FedEx and DHL eCommerce.
            </summary>
        </member>
        <member name="P:EasyPost.Options.HoldForPickup">
            <summary>
            Package will wait at carrier facility for pickup.
            </summary>
        </member>
        <member name="P:EasyPost.Options.InvoiceNumber">
            <summary>
            This will print an invoice number on the postage label.
            </summary>
        </member>
        <member name="P:EasyPost.Options.LabelDate">
            <summary>
            Set the date that will appear on the postage label. Accepts ISO 8601 formatted string including time zone offset.
            </summary>
        </member>
        <member name="P:EasyPost.Options.LabelFormat">
            <summary>
            Supported label formats include "PNG", "PDF", "ZPL", and "EPL2". "PNG" is the only format that allows for conversion.
            </summary>
        </member>
        <member name="P:EasyPost.Options.Machinable">
            <summary>
            Whether or not the parcel can be processed by the carriers equipment.
            </summary>
        </member>
        <member name="P:EasyPost.Options.PrintCustom_1">
            <summary>
            You can optionally print custom messages on labels. The locations of these fields show up on different spots on the carrier's labels.
            </summary>
        </member>
        <member name="P:EasyPost.Options.PrintCustom_2">
            <summary>
            An additional message on the label. Same restrictions as print_custom_1
            </summary>
        </member>
        <member name="P:EasyPost.Options.PrintCustom_3">
            <summary>
            An additional message on the label. Same restrictions as print_custom_1
            </summary>
        </member>
        <member name="P:EasyPost.Options.PrintCustom_1Barcode">
            <summary>
            Create a barcode for this custom reference if supported by carrier.
            </summary>
        </member>
        <member name="P:EasyPost.Options.PrintCustom_2Barcode">
            <summary>
            Create a barcode for this custom reference if supported by carrier.
            </summary>
        </member>
        <member name="P:EasyPost.Options.PrintCustom_3Barcode">
            <summary>
            Create a barcode for this custom reference if supported by carrier.
            </summary>
        </member>
        <member name="P:EasyPost.Options.PrintCustom_1Code">
            <summary>
            Specify the type of print_custom_1.
            FedEx
            . (null) - If print_custom_1_code is not provided it defaults to Customer Reference
            . PO - Purchase Order Number
            . DP - Department Number
            . RMA - Return Merchandise Authorization
            
            UPS
            . AJ - Accounts Receivable Customer Account
            . AT - Appropriation Number
            . BM - Bill of Lading Number
            . 9V - Collect on Delivery(COD) Number
            . ON - Dealer Order Number
            . DP - Department Number
            . 3Q - Food and Drug Administration(FDA) Product Code
            . IK - Invoice Number
            . MK - Manifest Key Number
            . MJ - Model Number
            . PM - Part Number
            . PC - Production Code
            . PO - Purchase Order Number
            . RQ - Purchase Request Number
            . RZ - Return Authorization Number
            . SA - Salesperson Number
            . SE - Serial Number
            . ST - Store Number
            . TN - Transaction Reference Number
            . EI - Employer’s ID Number
            . TJ - Federal Taxpayer ID No.
            . SY - Social Security Number
            </summary>
        </member>
        <member name="P:EasyPost.Options.PrintCustom_2Code">
            <summary>
            See print_custom_1_code.
            </summary>
        </member>
        <member name="P:EasyPost.Options.PrintCustom_3Code">
            <summary>
            See print_custom_1_code.
            </summary>
        </member>
        <member name="P:EasyPost.Options.SaturdayDelivery">
            <summary>
            Set this value to true for delivery on Saturday. When setting the saturday_delivery option, you will only get 
            rates for services that are eligible for saturday delivery. If no services are available for saturday delivery, 
            then you will not be returned any rates. You may need to create 2 shipments, one with the saturday_delivery 
            option set on one without to get all your eligible rates.
            </summary>
        </member>
        <member name="P:EasyPost.Options.SpecialRatesEligibility">
            <summary>
            This option allows you to request restrictive rates from USPS. Can set to 'USPS.MEDIAMAIL' or 'USPS.LIBRARYMAIL'.
            </summary>
        </member>
        <member name="P:EasyPost.Options.SmartpostHub">
            <summary>
            You can use this to override the hub ID you have on your account.
            </summary>
        </member>
        <member name="P:EasyPost.Options.SmartpostManifest">
            <summary>
            The manifest ID is used to group SmartPost packages onto a manifest for each trailer.
            </summary>
        </member>
        <member name="P:EasyPost.Options.CarrierInsuranceAmount">
            <summary>
            Carrier insurance amount
            </summary>
        </member>
        <member name="P:EasyPost.Options.CarrierNotificationEmail">
            <summary>
            Carrier notification email
            </summary>
        </member>
        <member name="P:EasyPost.Options.CarrierNotificationSms">
            <summary>
            Carrier notification SMS
            </summary>
        </member>
        <member name="P:EasyPost.Options.CarrierBranded">
            <summary>
            Carrier branded labels
            </summary>
        </member>
        <member name="P:EasyPost.Options.CommercialInvoiceFormat">
            <summary>
            Commercial invoice format
            </summary>
        </member>
        <member name="P:EasyPost.Options.CommercialInvoiceSize">
            <summary>
            Commercial invoice size
            </summary>
        </member>
        <member name="P:EasyPost.Options.CostCenter">
            <summary>
            Cost center
            </summary>
        </member>
        <member name="P:EasyPost.Options.CustomsBrokerAddressId">
            <summary>
            Customs brokeder address ID
            </summary>
        </member>
        <member name="P:EasyPost.Options.DeclaredValue">
            <summary>
            Declared value
            </summary>
        </member>
        <member name="P:EasyPost.Options.DeliveredDutyPaid">
            <summary>
            Delivered duty paid
            </summary>
        </member>
        <member name="P:EasyPost.Options.DeliveryTimePreference">
            <summary>
            Delivert time preference
            </summary>
        </member>
        <member name="P:EasyPost.Options.DutyPaymentAccount">
            <summary>
            Duty payment amount
            </summary>
        </member>
        <member name="P:EasyPost.Options.Group">
            <summary>
            Group
            </summary>
        </member>
        <member name="P:EasyPost.Options.ImageFormat">
            <summary>
            Image format
            </summary>
        </member>
        <member name="P:EasyPost.Options.LabelSize">
            <summary>
            Label size
            </summary>
        </member>
        <member name="P:EasyPost.Options.NeutralDelivery">
            <summary>
            Neutral delivery
            </summary>
        </member>
        <member name="P:EasyPost.Options.NonContract">
            <summary>
            Non contract
            </summary>
        </member>
        <member name="P:EasyPost.Options.PoSort">
            <summary>
            PO sort
            </summary>
        </member>
        <member name="P:EasyPost.Options.PrintRate">
            <summary>
            Print rate
            </summary>
        </member>
        <member name="P:EasyPost.Options.ReturnService">
            <summary>
            Return service
            </summary>
        </member>
        <member name="P:EasyPost.Options.SettlementMethod">
            <summary>
            Settlement method
            </summary>
        </member>
        <member name="T:EasyPost.ClientConfiguration">
            <summary>
            Provides configuration options for the EasyPost client
            </summary>
        </member>
        <member name="P:EasyPost.ClientConfiguration.ApiKey">
            <summary>
            The API key to use on per-request basis
            </summary>
        </member>
        <member name="P:EasyPost.ClientConfiguration.ApiBase">
            <summary>
            The API base URI to use on a per-request basis
            </summary>
        </member>
        <member name="P:EasyPost.ClientConfiguration.Timeout">
            <summary>
            Timeout in milliseconds to use for requests made by the client
            </summary>
        </member>
        <member name="M:EasyPost.ClientConfiguration.#ctor(System.String)">
            <summary>
            Create a ClientConfiguration instance
            </summary>
            <param name="apiKey">The API key to use for the client connection</param>
        </member>
        <member name="M:EasyPost.ClientConfiguration.#ctor(System.String,System.Int32)">
            <summary>
            Create a ClientConfiguration instance
            </summary>
            <param name="apiKey">The API key to use for the client connection</param>
            <param name="timeout">The timeout to use for client operations. 0 for the default.</param>
        </member>
        <member name="M:EasyPost.ClientConfiguration.#ctor(System.String,System.String)">
            <summary>
            Create an ClientConfiguration instance
            </summary>
            <param name="apiKey">The API key to use for the client connection</param>
            <param name="apiBase">The base API url to use for the client connection</param>
        </member>
        <member name="M:EasyPost.ClientConfiguration.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Create an ClientConfiguration instance
            </summary>
            <param name="apiKey">The API key to use for the client connection</param>
            <param name="apiBase">The base API url to use for the client connection</param>
            <param name="timeout">The timeout to use for client operations. 0 for the default.</param>
        </member>
        <member name="P:EasyPost.Report.Status">
            <summary>
            "new", "available", "failed", or null
            </summary>
        </member>
        <member name="P:EasyPost.Report.StartDate">
            <summary>
            A date string in YYYY-MM-DD form eg: "2016-02-02"
            </summary>
        </member>
        <member name="P:EasyPost.Report.EndDate">
            <summary>
            A date string in YYYY-MM-DD form eg: "2016-02-03"
            </summary>
        </member>
        <member name="P:EasyPost.Report.IncludeChildren">
            <summary>
            Set true if you would like to include Shipments /Trackers created by child users
            </summary>
        </member>
        <member name="P:EasyPost.Report.Url">
            <summary>
            A url that contains a link to the Report. Expires 30 seconds after retrieving this object
            </summary>
        </member>
        <member name="P:EasyPost.Report.UrlExpiresAt">
            <summary>
            Url expiring time
            </summary>
        </member>
        <member name="P:EasyPost.Report.SendEmail">
            <summary>
            Set true if you would like to send an email containing the Report
            </summary>
        </member>
        <member name="P:EasyPost.ReportList.Reports">
            <summary>
            List of reports
            </summary>
        </member>
        <member name="P:EasyPost.ReportList.HasMore">
            <summary>
            True if there are more to retrieve
            </summary>
        </member>
        <member name="P:EasyPost.ReportList.Type">
            <summary>
            Type of the report
            </summary>
        </member>
        <member name="P:EasyPost.ReportList.Options">
            <summary>
            Options used to generate the list
            </summary>
        </member>
        <member name="M:EasyPost.ReportList.Next(EasyPost.IEasyPostClient)">
            <summary>
            Get the next page of reports based on the original parameters used to generate the list
            </summary>
            <param name="client">Easy post client to use</param>
            <returns>A new ReportList instance.</returns>
        </member>
        <member name="T:EasyPost.EasyPostObject">
            <summary>
            Base class for all EasyPost objects
            </summary>
        </member>
        <member name="P:EasyPost.EasyPostObject.Id">
            <summary>
            Unique identifier for the resource. Every EasyPost Object that can be 
            created through the API has an id field that is used to refer to the object 
            in other API calls. An id consists of a prefix based on the object type 
            (e.g. Shipments have the prefix "shp_") followed by 32 hex characters. 
            </summary>
        </member>
        <member name="P:EasyPost.EasyPostObject.Object">
            <summary>
            Object type name. Every first-class EasyPost object includes an object value. 
            </summary>
        </member>
        <member name="P:EasyPost.EasyPostObject.CreatedAt">
            <summary>
            Date the object was created
            </summary>
        </member>
        <member name="P:EasyPost.EasyPostObject.UpdatedAt">
            <summary>
            Date the object was last updated
            </summary>
        </member>
        <member name="P:EasyPost.EasyPostObject.Mode">
            <summary>
            Set based on which api-key you used, either "test" or "production".
            </summary>
        </member>
        <member name="P:EasyPost.EasyPostObject.Reference">
            <summary>
            Many API objects also have an optional reference field that may be assigned during creation. The reference values 
            you assign may be used in place of id values in many API endpoints, but we recommend using the EasyPost-assigned id 
            instead because ids are guaranteed to be unique within the system, while reference uniqueness is not enforced. 
            </summary>
        </member>
        <member name="F:EasyPost.EasyPostObject.RequestError">
            <summary>
            Request error for the requests get stored here rather than throwing exceptions which wreaks havoc in an Async environment.
            This value is filled in if there was a reques error with the error details. This is not a property so it is never sent
            over the wire and only filled in by the request code.
            </summary>
        </member>
        <member name="P:EasyPost.TrackerListOptions.TrackingCode">
            <summary>
            Optional tracking number string. Only retrieve trackers with the given tracking code.
            </summary>
        </member>
        <member name="P:EasyPost.TrackerListOptions.Carrier">
            <summary>
            Optional tracker's carrier. Only retrieve trackers with the given carrier.
            </summary>
        </member>
        <member name="P:EasyPost.TrackerListOptions.BeforeId">
            <summary>
            Optional pagination parameter. Only trackers created before the given ID will be included. May not be used with AfterId.
            </summary>
        </member>
        <member name="P:EasyPost.TrackerListOptions.AfterId">
            <summary>
            Optional pagination parameter. Only trackers created after the given ID will be included. May not be used with BeforeId.
            </summary>
        </member>
        <member name="P:EasyPost.TrackerListOptions.StartDatetime">
            <summary>
            Only return trackers created after this timestamp. Defaults to 1 month ago, or 1 month before a passed EndDatetime.
            </summary>
        </member>
        <member name="P:EasyPost.TrackerListOptions.EndDatetime">
            <summary>
            Only return trackers created before this timestamp. Defaults to end of the current day, or 1 month after a passed StartDatetime.
            </summary>
        </member>
        <member name="P:EasyPost.TrackerListOptions.PageSize">
            <summary>
            The number of trackers to return on each page. The maximum value is 100
            </summary>
        </member>
        <member name="P:EasyPost.ScanFormListOptions.BeforeId">
            <summary>
            Optional pagination parameter. Only scan forms created before the given ID will be included. May not be used with AfterId.
            </summary>
        </member>
        <member name="P:EasyPost.ScanFormListOptions.AfterId">
            <summary>
            Optional pagination parameter. Only scan forms created after the given ID will be included. May not be used with BeforeId.
            </summary>
        </member>
        <member name="P:EasyPost.ScanFormListOptions.StartDatetime">
            <summary>
            Only return scan forms created after this timestamp. Defaults to 1 month ago, or 1 month before a passed EndDatetime.
            </summary>
        </member>
        <member name="P:EasyPost.ScanFormListOptions.EndDatetime">
            <summary>
            Only return scan forms created before this timestamp. Defaults to end of the current day, or 1 month after a passed StartDatetime.
            </summary>
        </member>
        <member name="P:EasyPost.ScanFormListOptions.PageSize">
            <summary>
            The number of scan forms to return on each page. The maximum value is 100
            </summary>
        </member>
        <member name="M:EasyPost.Resource.AsDictionary">
            <summary>
            Returns the resource as a dictionary of JSON style named parameters
            </summary>
            <returns></returns>
        </member>
        <member name="M:EasyPost.Resource.ToJsonStyle(System.String)">
            <summary>
            Converts a name from the usual C# style CamelCase to the JSON style camel_case
            </summary>
            <param name="name">Name to convert</param>
            <returns>Converted name</returns>
        </member>
        <member name="M:EasyPost.Resource.GetValue(System.Reflection.PropertyInfo)">
            <summary>
            Gets the value for the property. If the propery is a reference to another resources we 
            recurse into that resource and dump it as well as a dictionary.
            </summary>
            <param name="info">Property info for the property</param>
            <returns>Value for the property</returns>
        </member>
        <member name="P:EasyPost.ReportListOptions.BeforeId">
            <summary>
            Optional pagination parameter. Only reports created before the given ID will be included. May not be used with AfterId.
            </summary>
        </member>
        <member name="P:EasyPost.ReportListOptions.AfterId">
            <summary>
            Optional pagination parameter. Only reports created after the given ID will be included. May not be used with BeforeId.
            </summary>
        </member>
        <member name="P:EasyPost.ReportListOptions.StartDatetime">
            <summary>
            Only return reports created after this timestamp. Defaults to 1 month ago, or 1 month before a passed EndDatetime.
            </summary>
        </member>
        <member name="P:EasyPost.ReportListOptions.EndDatetime">
            <summary>
            Only return reports created before this timestamp. Defaults to end of the current day, or 1 month after a passed StartDatetime.
            </summary>
        </member>
        <member name="P:EasyPost.ReportListOptions.PageSize">
            <summary>
            The number of reports to return on each page. The maximum value is 100
            </summary>
        </member>
        <member name="P:EasyPost.ShipmentListOptions.BeforeId">
            <summary>
            Optional pagination parameter. Only shipments created before the given ID will be included. May not be used with AfterId.
            </summary>
        </member>
        <member name="P:EasyPost.ShipmentListOptions.AfterId">
            <summary>
            Optional pagination parameter. Only shipments created after the given ID will be included. May not be used with BeforeId.
            </summary>
        </member>
        <member name="P:EasyPost.ShipmentListOptions.StartDatetime">
            <summary>
            Only return Shipments created after this timestamp. Defaults to 1 month ago, or 1 month before a passed EndDatetime.
            </summary>
        </member>
        <member name="P:EasyPost.ShipmentListOptions.EndDatetime">
            <summary>
            Only return Shipments created before this timestamp. Defaults to end of the current day, or 1 month after a passed StartDatetime.
            </summary>
        </member>
        <member name="P:EasyPost.ShipmentListOptions.PageSize">
            <summary>
            The number of Shipments to return on each page. The maximum value is 100
            </summary>
        </member>
        <member name="P:EasyPost.ShipmentListOptions.Purchased">
            <summary>
            Only include Shipments that have been purchased. Default is true
            </summary>
        </member>
        <member name="P:EasyPost.ShipmentListOptions.IncludeChildren">
            <summary>
            Also include Shipments created by Child Users. Defaults to false
            </summary>
        </member>
        <member name="P:EasyPost.TrackerList.Trackers">
            <summary>
            List of trackers
            </summary>
        </member>
        <member name="P:EasyPost.TrackerList.HasMore">
            <summary>
            True if there is more in the list
            </summary>
        </member>
        <member name="P:EasyPost.TrackerList.Options">
            <summary>
            Options used to generate the list
            </summary>
        </member>
        <member name="M:EasyPost.TrackerList.Next(EasyPost.IEasyPostClient)">
            <summary>
            Get the next page of shipments based on the original parameters used to generate the list
            </summary>
            <param name="client">Easy post client to use</param>
            <returns>A new ShipmentList instance.</returns>
        </member>
        <member name="P:EasyPost.ScanFormList.ScanForms">
            <summary>
            List of scan forms
            </summary>
        </member>
        <member name="P:EasyPost.ScanFormList.HasMore">
            <summary>
            True if there is more in the list
            </summary>
        </member>
        <member name="P:EasyPost.ScanFormList.Options">
            <summary>
            Options used to generate the list
            </summary>
        </member>
        <member name="M:EasyPost.ScanFormList.Next(EasyPost.IEasyPostClient)">
            <summary>
            Get the next page of scan forms based on the original parameters used to generate the list
            </summary>
            <param name="client">Easy post client to use</param>
            <returns>A new ScanFormList instance.</returns>
        </member>
        <member name="P:EasyPost.Fee.Type">
            <summary>
            The name of the category of fee. Possible types are "LabelFee", "PostageFee", "InsuranceFee", and "TrackerFee"
            </summary>
        </member>
        <member name="P:EasyPost.Fee.Amount">
            <summary>
            USD value with sub-cent precision
            </summary>
        </member>
        <member name="P:EasyPost.Fee.Charged">
            <summary>
            Whether EasyPost has successfully charged your account for the fee
            </summary>
        </member>
        <member name="P:EasyPost.Fee.Refunded">
            <summary>
            Whether the Fee has been refunded successfully
            </summary>
        </member>
        <member name="P:EasyPost.Form.FormUrl">
            <summary>
            Url of the form
            </summary>
        </member>
        <member name="P:EasyPost.Form.FormType">
            <summary>
            Type of the form
            </summary>
        </member>
        <member name="P:EasyPost.Form.SubmittedElectronically">
            <summary>
            True if submitted electronically
            </summary>
        </member>
        <member name="P:EasyPost.Order.ToAddress">
            <summary>
            The destination address
            </summary>
        </member>
        <member name="P:EasyPost.Order.FromAddress">
            <summary>
            The origin address
            </summary>
        </member>
        <member name="P:EasyPost.Order.ReturnAddress">
            <summary>
            The shipper's address, defaults to from_address
            </summary>
        </member>
        <member name="P:EasyPost.Order.BuyerAddress">
            <summary>
            The buyer's address, defaults to to_address
            </summary>
        </member>
        <member name="P:EasyPost.Order.Shipments">
            <summary>
            All associated Shipment objects
            </summary>
        </member>
        <member name="P:EasyPost.Order.Rates">
            <summary>
            All associated Rate objects
            </summary>
        </member>
        <member name="P:EasyPost.Order.Messages">
            <summary>
            Any carrier errors encountered during rating
            </summary>
        </member>
        <member name="P:EasyPost.Order.IsReturn">
            <summary>
            Set true to create as a return
            </summary>
        </member>
        <member name="P:EasyPost.Order.CustomsInfo">
            <summary>
            Customs information
            </summary>
        </member>
        <member name="P:EasyPost.Order.CarrierAccounts">
            <summary>
            Carrier accounts
            </summary>
        </member>
        <member name="P:EasyPost.Order.Containers">
            <summary>
            Containers
            </summary>
        </member>
        <member name="P:EasyPost.Order.Items">
            <summary>
            Items in the order
            </summary>
        </member>
        <member name="P:EasyPost.Item.Name">
            <summary>
            Name of the item
            </summary>
        </member>
        <member name="P:EasyPost.Item.Description">
            <summary>
            Description of the item
            </summary>
        </member>
        <member name="P:EasyPost.Item.HarmonizedCode">
            <summary>
            Harmonized code of the item
            </summary>
        </member>
        <member name="P:EasyPost.Item.CountryOfOrigin">
            <summary>
            Country of origin of the item
            </summary>
        </member>
        <member name="P:EasyPost.Item.WarehouseLocation">
            <summary>
            Warehouse location of the item
            </summary>
        </member>
        <member name="P:EasyPost.Item.Value">
            <summary>
            Value of the item
            </summary>
        </member>
        <member name="P:EasyPost.Item.Length">
            <summary>
            Length of the item
            </summary>
        </member>
        <member name="P:EasyPost.Item.Width">
            <summary>
            Width of the item
            </summary>
        </member>
        <member name="P:EasyPost.Item.Height">
            <summary>
            Height of the item
            </summary>
        </member>
        <member name="P:EasyPost.Item.Weight">
            <summary>
            Weight of the item
            </summary>
        </member>
        <member name="P:EasyPost.CustomsInfo.EelPfc">
            <summary>
            "EEL" or "PFC" value less than $2500: "NOEEI 30.37(a)"; value greater than $2500: see Customs Guide
            </summary>
        </member>
        <member name="P:EasyPost.CustomsInfo.ContentsType">
            <summary>
            "documents", "gift", "merchandise", "returned_goods", "sample", or "other"
            </summary>
        </member>
        <member name="P:EasyPost.CustomsInfo.ContentsExplanation">
            <summary>
            Human readable description of content. Required for certain carriers and always required if contents_type is "other"
            </summary>
        </member>
        <member name="P:EasyPost.CustomsInfo.CustomsCertify">
            <summary>
            Electronically certify the information provided
            </summary>
        </member>
        <member name="P:EasyPost.CustomsInfo.CustomsSigner">
            <summary>
            Required if customs_certify is true
            </summary>
        </member>
        <member name="P:EasyPost.CustomsInfo.NonDeliveryOption">
            <summary>
            "abandon" or "return", defaults to "return"
            </summary>
        </member>
        <member name="P:EasyPost.CustomsInfo.RestrictionType">
            <summary>
            "none", "other", "quarantine", or "sanitary_phytosanitary_inspection"
            </summary>
        </member>
        <member name="P:EasyPost.CustomsInfo.RestrictionComments">
            <summary>
            Required if restriction_type is not "none"
            </summary>
        </member>
        <member name="P:EasyPost.CustomsInfo.CustomsItems">
            <summary>
            Describes to products being shipped
            </summary>
        </member>
        <member name="P:EasyPost.CustomsItem.Description">
            <summary>
            Required, description of item being shipped
            </summary>
        </member>
        <member name="P:EasyPost.CustomsItem.Quantity">
            <summary>
            Required, greater than zero
            </summary>
        </member>
        <member name="P:EasyPost.CustomsItem.Value">
            <summary>
            Required, greater than zero, total value (unit value * quantity)
            </summary>
        </member>
        <member name="P:EasyPost.CustomsItem.Weight">
            <summary>
            Required, greater than zero, total weight (unit weight * quantity)
            </summary>
        </member>
        <member name="P:EasyPost.CustomsItem.HsTariffNumber">
            <summary>
            Harmonized Tariff Schedule, e.g. "6109.10.0012" for Men's T-shirts
            </summary>
        </member>
        <member name="P:EasyPost.CustomsItem.Code">
            <summary>
            SKU/UPC or other product identifier
            </summary>
        </member>
        <member name="P:EasyPost.CustomsItem.OriginCountry">
            <summary>
            Required, 2 char country code
            </summary>
        </member>
        <member name="P:EasyPost.CustomsItem.Currency">
            <summary>
            3 char currency code, default USD
            </summary>
        </member>
        <member name="M:EasyPost.IResource.AsDictionary">
            <summary>
            Returns the resource properties as a dictionary
            </summary>
            <returns>Dictionary for the resource properties</returns>
        </member>
        <member name="P:EasyPost.Container.Name">
            <summary>
            Name of the container
            </summary>
        </member>
        <member name="P:EasyPost.Container.Type">
            <summary>
            Type of the container
            </summary>
        </member>
        <member name="P:EasyPost.Container.Length">
            <summary>
            Length of the container
            </summary>
        </member>
        <member name="P:EasyPost.Container.Width">
            <summary>
            Width of the container
            </summary>
        </member>
        <member name="P:EasyPost.Container.Height">
            <summary>
            Height of the container
            </summary>
        </member>
        <member name="P:EasyPost.Container.MaxWeight">
            <summary>
            Max weight of the container
            </summary>
        </member>
        <member name="P:EasyPost.Parcel.Length">
            <summary>
            Required if predefined_package is empty and defined in inches
            </summary>
        </member>
        <member name="P:EasyPost.Parcel.Width">
            <summary>
            Required if predefined_package is empty and defined in inches
            </summary>
        </member>
        <member name="P:EasyPost.Parcel.Height">
            <summary>
            Required if predefined_package is empty and defined in inches
            </summary>
        </member>
        <member name="P:EasyPost.Parcel.Weight">
            <summary>
            Always required and defined in oz
            </summary>
        </member>
        <member name="P:EasyPost.Parcel.PredefinedPackage">
            <summary>
            Optional, one of the pre defined packages defined here:
            https://www.easypost.com/docs/api#predefined-packages
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.Status">
            <summary>
            One of: "unknown", "scheduled", or "canceled"
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.Name">
            <summary>
            Name of the pickup
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.MinDatetime">
            <summary>
            The earliest time at which the package is available to pick up
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.MaxDatetime">
            <summary>
            The latest time at which the package is available to pick up. Must be later than the min_datetime
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.IsAccountAddress">
            <summary>
            Is the pickup address the account's address?
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.Instructions">
            <summary>
            Additional text to help the driver successfully obtain the package
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.Messages">
            <summary>
            A list of messages containing carrier errors encountered during pickup rate generation
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.Confirmation">
            <summary>
            The confirmation number for a booked pickup from the carrier
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.Shipment">
            <summary>
            The associated Shipment
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.Address">
            <summary>
            The associated Address
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.CarrierAccounts">
            <summary>
            The list of carriers (if empty, all carriers were used) used to generate pickup rates
            </summary>
        </member>
        <member name="P:EasyPost.Pickup.PickupRates">
            <summary>
            The list of different pickup rates across valid carrier accounts for the shipment
            </summary>
        </member>
        <member name="M:EasyPost.EasyPostRequest.#ctor(System.String,RestSharp.Method)">
            <summary>
            Create a new EasyPost request
            </summary>
            <param name="resource">Resource to communicate with</param>
            <param name="method">Request method</param>
        </member>
        <member name="F:EasyPost.EasyPostRequest.RestRequest">
            <summary>
            The underlying RestRequest
            </summary>
        </member>
        <member name="P:EasyPost.EasyPostRequest.RootElement">
            <summary>
            Sets the root element for the response
            </summary>
        </member>
        <member name="M:EasyPost.EasyPostRequest.AddUrlSegment(System.String,System.String)">
            <summary>
            Adds a Url segment parameter to the request
            </summary>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
        </member>
        <member name="M:EasyPost.EasyPostRequest.AddParameter(System.String,System.String,RestSharp.ParameterType)">
            <summary>
            Adds a parameter to the request
            </summary>
            <param name="name">Name of the parameter</param>
            <param name="value">Value of the parameter</param>
            <param name="type">Type of the parameter</param>
        </member>
        <member name="M:EasyPost.EasyPostRequest.AddQueryString(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Adds query strings to the request if the values in the dictionary are not null
            </summary>
            <param name="parameters">Parameters to add to the query string</param>
        </member>
        <member name="M:EasyPost.EasyPostRequest.AddBody(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Adds the body to the request as a dictionary of flattended parameters
            </summary>
            <param name="parameters">Non-flattened dictionary of parameters</param>
            <param name="parent">Parent object</param>
        </member>
        <member name="M:EasyPost.EasyPostRequest.AddBody(System.Collections.Generic.List{System.Collections.Generic.Dictionary{System.String,System.Object}},System.String)">
            <summary>
            Adds a list of dictionarys as parameters by combining them all together
            </summary>
            <param name="parameters">List of parameter dictionaries</param>
            <param name="parent">Parent object</param>
        </member>
        <member name="M:EasyPost.EasyPostRequest.AddBody(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Adds a list of key value pairs to the request body
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:EasyPost.EasyPostRequest.EncodeParameters(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            URL encodes the list of key/value pairs for the request
            </summary>
            <param name="parameters">Parameters to encode</param>
            <returns>Encoded parameters</returns>
        </member>
        <member name="M:EasyPost.EasyPostRequest.EncodeParameter(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            URL encodes a single parameter
            </summary>
            <param name="parameter">Parameter to encode</param>
            <returns>Encoded parameter</returns>
        </member>
        <member name="M:EasyPost.EasyPostRequest.FlattenParameters(System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
            <summary>
            Flattens the parameters for the request
            </summary>
            <param name="parameters">Dictionary of parameters to flattend</param>
            <param name="parent">Parent object</param>
            <returns>List of flattened parameters as a key value pair set</returns>
        </member>
        <member name="M:EasyPost.EasyPostRequest.FlattenList(System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Flattens a list of values
            </summary>
            <param name="parent">Parent value</param>
            <param name="result">Place to store the result</param>
            <param name="pair">Pair we are flattening</param>
        </member>
        <member name="P:EasyPost.ScanForm.Status">
            <summary>
            Current status. Possible values are "creating", "created" and "failed"
            </summary>
        </member>
        <member name="P:EasyPost.ScanForm.Message">
            <summary>
            Human readable message explaining any failures
            </summary>
        </member>
        <member name="P:EasyPost.ScanForm.Address">
            <summary>
            Address the will be Shipments shipped from
            </summary>
        </member>
        <member name="P:EasyPost.ScanForm.TrackingCodes">
            <summary>
            Tracking codes included on the ScanForm
            </summary>
        </member>
        <member name="P:EasyPost.ScanForm.FormUrl">
            <summary>
            Url of the document
            </summary>
        </member>
        <member name="P:EasyPost.ScanForm.FormFileType">
            <summary>
            File format of the document
            </summary>
        </member>
        <member name="P:EasyPost.ScanForm.BatchId">
            <summary>
            The id of the associated Batch. Unique, starts with "batch_"
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.ToAddress">
            <summary>
            The destination address
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.FromAddress">
            <summary>
            The origin address
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.ReturnAddress">
            <summary>
            The shipper's address, defaults to FromAddress
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.BuyerAddress">
            <summary>
            The buyer's address, defaults to ToAddress
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Parcel">
            <summary>
            The dimensions and weight of the package
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.CustomsInfo">
            <summary>
            Information for the processing of customs
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.ScanForm">
            <summary>
            Document created to manifest and scan multiple shipments
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Forms">
            <summary>
            All associated Form objects
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Insurance">
            <summary>
            The associated Insurance object
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Rates">
            <summary>
            All associated Rate objects
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.SelectedRate">
            <summary>
            The specific rate purchased for the shipment, or null if unpurchased or purchased through another mechanism
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.PostageLabel">
            <summary>
            The associated PostageLabel object
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Messages">
            <summary>
            Any carrier errors encountered during rating, discussed in more depth below
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Options">
            <summary>
            All of the options passed to the shipment, discussed in more depth below
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.IsReturn">
            <summary>
            Set true to create as a return, discussed in more depth below
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.TrackingCode">
            <summary>
            If purchased, the tracking code will appear here as well as within the Tracker object
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.UspsZone">
            <summary>
            The USPS zone of the shipment, if purchased with USPS
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Status">
            <summary>
            The current tracking status of the shipment
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Tracker">
            <summary>
            The associated Tracker object
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Fees">
            <summary>
            The associated Fee objects charged to the billing user account
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.RefundStatus">
            <summary>
            The current status of the shipment refund process. Possible values are "submitted", "refunded", "rejected".
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.BatchId">
            <summary>
            The ID of the batch that contains this shipment, if any
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.BatchStatus">
            <summary>
            The current state of the associated BatchShipment
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.BatchMessage">
            <summary>
            The current message of the associated BatchShipment
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.StampUrl">
            <summary>
            The stamp Url
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.BarcodeUrl">
            <summary>
            The barcode Url
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.CarrierAccounts">
            <summary>
            Carrier accounts to use
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Carrier">
            <summary>
            Optional carrier to select for this shipment. I believe this only works for creation of shipments when creating a batch.
            </summary>
        </member>
        <member name="P:EasyPost.Shipment.Service">
            <summary>
            Optional service to select for this shipment. I believe this only works for creation of shipments when creating a batch.
            </summary>
        </member>
        <member name="M:EasyPost.Shipment.LowestRate(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get the lowest rate for the shipment. Optionally whitelist/blacklist carriers and services from the search.
            </summary>
            <param name="includeCarriers">Carriers whitelist.</param>
            <param name="includeServices">Services whitelist.</param>
            <param name="excludeCarriers">Carriers blacklist.</param>
            <param name="excludeServices">Services blacklist.</param>
            <returns>EasyPost.Rate instance or null if no rate was found.</returns>
        </member>
        <member name="P:EasyPost.ShipmentList.Shipments">
            <summary>
            List of shipments in this list
            </summary>
        </member>
        <member name="P:EasyPost.ShipmentList.HasMore">
            <summary>
            True if there are more shipments to retrieve
            </summary>
        </member>
        <member name="P:EasyPost.ShipmentList.Options">
            <summary>
            Options used to generate the list
            </summary>
        </member>
        <member name="M:EasyPost.ShipmentList.Next(EasyPost.IEasyPostClient)">
            <summary>
            Get the next page of shipments based on the original parameters used to generate the list
            </summary>
            <param name="client">Easy post client to use</param>
            <returns>A new ShipmentList instance.</returns>
        </member>
        <member name="P:EasyPost.Tracker.TrackingCode">
            <summary>
            The tracking code provided by the carrier
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.Status">
            <summary>
            The current status of the package, possible values are "unknown", "pre_transit", "in_transit", "out_for_delivery", "delivered", "available_for_pickup", "return_to_sender", "failure", "cancelled" or "error"
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.SignedBy">
            <summary>
            The name of the person who signed for the package (if available)
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.Weight">
            <summary>
            The weight of the package as measured by the carrier in ounces (if available)
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.EstDeliveryDate">
            <summary>
            The estimated delivery date provided by the carrier (if available)
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.ShipmentId">
            <summary>
            The id of the EasyPost Shipment object associated with the Tracker (if any)
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.Carrier">
            <summary>
            The name of the carrier handling the shipment
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.TrackingDetails">
            <summary>
            Array of the associated TrackingDetail objects
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.CarrierDetail">
            <summary>
            The associated CarrierDetail object (if available)
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.PublicUrl">
            <summary>
            URL to a publicly-accessible html page that shows tracking details for this tracker
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.Fees">
            <summary>
            Array of the associated Fee objects
            </summary>
        </member>
        <member name="P:EasyPost.Tracker.TrackingUpdatedAt">
            <summary>
            Time when tracker was updated
            </summary>
        </member>
        <member name="P:EasyPost.TrackingDetail.Message">
            <summary>
            Description of the scan event
            </summary>
        </member>
        <member name="P:EasyPost.TrackingDetail.Status">
            <summary>
            Status of the package at the time of the scan event, possible values are:
            "unknown", "pre_transit", "in_transit", "out_for_delivery", "delivered", 
            "available_for_pickup", "return_to_sender", "failure", "cancelled" or "error"
            </summary>
        </member>
        <member name="P:EasyPost.TrackingDetail.Datetime">
            <summary>
            The timestamp when the tracking scan occurred
            </summary>
        </member>
        <member name="P:EasyPost.TrackingDetail.Source">
            <summary>
            The original source of the information for this scan event, usually the carrier
            </summary>
        </member>
        <member name="P:EasyPost.TrackingDetail.TrackingLocation">
            <summary>
            The location associated with the scan event
            </summary>
        </member>
        <member name="P:EasyPost.TrackingLocation.CreatedAt">
            <summary>
            Created at
            </summary>
        </member>
        <member name="P:EasyPost.TrackingLocation.UpdatedAt">
            <summary>
            Last updated at
            </summary>
        </member>
        <member name="P:EasyPost.TrackingLocation.City">
            <summary>
            The city where the scan event occurred (if available)
            </summary>
        </member>
        <member name="P:EasyPost.TrackingLocation.State">
            <summary>
            The state where the scan event occurred (if available)
            </summary>
        </member>
        <member name="P:EasyPost.TrackingLocation.Country">
            <summary>
            The country where the scan event occurred (if available)
            </summary>
        </member>
        <member name="P:EasyPost.TrackingLocation.Zip">
            <summary>
            The postal code where the scan event occurred (if available)
            </summary>
        </member>
        <member name="P:EasyPost.User.ParentId">
            <summary>
            The ID of the parent user object. Top-level users are defined as users with no parent
            </summary>
        </member>
        <member name="P:EasyPost.User.Name">
            <summary>
            First and last name required
            </summary>
        </member>
        <member name="P:EasyPost.User.Email">
            <summary>
            Required
            </summary>
        </member>
        <member name="P:EasyPost.User.Password">
            <summary>
            Password for the user
            </summary>
        </member>
        <member name="P:EasyPost.User.PasswordConfirmation">
            <summary>
            Password confirmation for the user
            </summary>
        </member>
        <member name="P:EasyPost.User.PhoneNumber">
            <summary>
            Optional phone number
            </summary>
        </member>
        <member name="P:EasyPost.User.Balance">
            <summary>
            Formatted as string "XX.XXXXX"
            </summary>
        </member>
        <member name="P:EasyPost.User.RechargeAmount">
            <summary>
            USD formatted dollars and cents, delimited by a decimal point
            </summary>
        </member>
        <member name="P:EasyPost.User.SecondaryRechargeAmount">
            <summary>
            USD formatted dollars and cents, delimited by a decimal point
            </summary>
        </member>
        <member name="P:EasyPost.User.RechargeThreshold">
            <summary>
            Number of cents USD that when your balance drops below, we automatically recharge your account with your primary payment method.
            </summary>
        </member>
        <member name="P:EasyPost.User.Children">
            <summary>
            All associated children
            </summary>
        </member>
        <member name="P:EasyPost.User.PricePerShipment">
            <summary>
            Price pre shipment
            </summary>
        </member>
        <member name="P:EasyPost.User.ApiKeys">
            <summary>
            All user API keys
            </summary>
        </member>
        <member name="P:EasyPost.VerificationDetails.Latitude">
            <summary>
            The latitude of the address
            </summary>
        </member>
        <member name="P:EasyPost.VerificationDetails.Longitude">
            <summary>
            The longitude of the address
            </summary>
        </member>
        <member name="P:EasyPost.Verification.Success">
            <summary>
            The success of the verification
            </summary>
        </member>
        <member name="P:EasyPost.Verification.Errors">
            <summary>
            All errors that caused the verification to fail
            </summary>
        </member>
        <member name="P:EasyPost.Verification.Details">
            <summary>
            Extra data related to the verification
            </summary>
        </member>
        <member name="P:EasyPost.Verifications.Zip4">
            <summary>
            Only applicable to US addresses - checks and sets the ZIP+4
            </summary>
        </member>
        <member name="P:EasyPost.Verifications.Delivery">
            <summary>
            Checks that the address is deliverable and makes minor corrections to spelling/format. US addresses will also have their "residential" status checked and set.
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.Service">
            <summary>
            Service level/name. See here for details:
            https://www.easypost.com/docs/api#service-levels
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.Carrier">
            <summary>
            Name of carrier
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.CarrierAccountId">
            <summary>
            ID of the CarrierAccount record used to generate this rate
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.ShipmentId">
            <summary>
            ID of the Shipment this rate belongs to
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.Rate">
            <summary>
            The actual rate quote for this service
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.Currency">
            <summary>
            Currency for the rate
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.RetailRate">
            <summary>
            The retail rate is the in-store rate given with no account
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.RetailCurrency">
            <summary>
            Currency for the retail rate
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.ListRate">
            <summary>
            The list rate is the non-negotiated rate given for having an account with the carrier
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.ListCurrency">
            <summary>
            Currency for the list rate
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.DeliveryDays">
            <summary>
            delivery days for this service
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.DeliveryDate">
            <summary>
            date for delivery
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.DeliveryDateGuaranteed">
            <summary>
            indicates if delivery window is guaranteed (true) or not (false)
            </summary>
        </member>
        <member name="P:EasyPost.CarrierRate.EstDeliveryDays">
            <summary>
            *This field is deprecated and should be ignored.
            </summary>
        </member>
    </members>
</doc>
